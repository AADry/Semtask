/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package semtask;

/**
 *
 * @author Admin
 */
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import java.util.ArrayList;
import javax.swing.*;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MainFrame extends javax.swing.JFrame {
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        addfigure = new javax.swing.JButton();
        loadfile = new javax.swing.JButton();
        savefile = new javax.swing.JButton();
        saveimage = new javax.swing.JButton();
        movefigure = new javax.swing.JButton();
        deletefigure = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        square = new javax.swing.JButton();
        length = new javax.swing.JButton();
        intersection = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jFileChooser1 = new javax.swing.JFileChooser();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Геометрические фигуры");
        setName("Геометрические фигуры"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        addfigure.setText("Добавить фигуру");
        addfigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addfigureActionPerformed(evt);
            }
        });
        addfigure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addfigureKeyPressed(evt);
            }
        });

        loadfile.setText("Загрузить файл");
        loadfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadfileActionPerformed(evt);
            }
        });

        savefile.setText("Сохранить файл");
        savefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savefileActionPerformed(evt);
            }
        });

        saveimage.setText("Сохранить изображение");
        saveimage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveimageActionPerformed(evt);
            }
        });

        movefigure.setText("Переместить фигуру");
        movefigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movefigureActionPerformed(evt);
            }
        });

        deletefigure.setText("Удалить фигуру");
        deletefigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletefigureActionPerformed(evt);
            }
        });

        clear.setText("Очистить");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        square.setText("Площадь фигуры");
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });

        length.setText("Периметр фигуры");
        length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthActionPerformed(evt);
            }
        });

        intersection.setText("Пересечение фигур");
        intersection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intersectionActionPerformed(evt);
            }
        });

        jLabel1.setText("Пересечение:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 1060, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addfigure)
                            .addComponent(loadfile)
                            .addComponent(savefile)
                            .addComponent(saveimage)
                            .addComponent(movefigure)
                            .addComponent(deletefigure)
                            .addComponent(clear)
                            .addComponent(square)
                            .addComponent(length)
                            .addComponent(intersection, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadfile, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savefile, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveimage, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movefigure, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletefigure, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(square, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(length, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intersection, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)))
        );

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(442, 442, 442)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addfigureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addfigureKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_addfigureKeyPressed

    private void addfigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addfigureActionPerformed
        
        AddFrame addframe = new AddFrame();
        addframe.setVisible(true);
        addframe.container1.addAll(shapes);
        this.dispose();
    }//GEN-LAST:event_addfigureActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
       shapes.clear();
       this.repaint();
    }//GEN-LAST:event_clearActionPerformed

    private void saveimageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveimageActionPerformed
        jFileChooser1.setVisible(true);
        
        
      
    }//GEN-LAST:event_saveimageActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
        DefaultComboBoxModel<String> cbmodel = new DefaultComboBoxModel<String>();
        for(int i = 0;i< shapes.size();i++){
        cbmodel.addElement(shapes.get(i).toString());
        }
        SquareFrame squareframe = new SquareFrame();
        squareframe.jComboBox1.setModel(cbmodel);
        squareframe.setVisible(true);
        squareframe.container5.addAll(shapes);
        this.dispose();
    }//GEN-LAST:event_squareActionPerformed

    private void deletefigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletefigureActionPerformed
        DefaultComboBoxModel<String> cbmodel = new DefaultComboBoxModel<String>();
        for(int i = 0;i< shapes.size();i++){
        cbmodel.addElement(shapes.get(i).toString());
        }
        DeleteFrame deleteframe = new DeleteFrame();
        deleteframe.jComboBox1.setModel(cbmodel);
        deleteframe.setVisible(true);
        deleteframe.container2.addAll(shapes);
        this.dispose();
    }//GEN-LAST:event_deletefigureActionPerformed

    private void movefigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movefigureActionPerformed
            DefaultComboBoxModel<String> cbmodel = new DefaultComboBoxModel<String>();
        for(int i = 0;i< shapes.size();i++){
        cbmodel.addElement(shapes.get(i).toString());
        }
        MoveFrame moveframe = new MoveFrame();
        moveframe.jComboBox1.setModel(cbmodel);
        moveframe.setVisible(true);
        moveframe.container7.addAll(shapes);
        this.dispose();;
    }//GEN-LAST:event_movefigureActionPerformed

    private void intersectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intersectionActionPerformed
           DefaultComboBoxModel<String> cbmodel = new DefaultComboBoxModel<String>();
           DefaultComboBoxModel<String> cbmode2 = new DefaultComboBoxModel<String>();
          for(int i = 0;i< shapes.size();i++){
          cbmodel.addElement(shapes.get(i).toString());
          cbmode2.addElement(shapes.get(i).toString());
           }
            IntersectionFrame intersectionframe = new IntersectionFrame();
            intersectionframe.jComboBox1.setModel(cbmodel);
            intersectionframe.jComboBox2.setModel(cbmode2);
            intersectionframe.setVisible(true);
            intersectionframe.container4.addAll(shapes);
            this.dispose();
    }//GEN-LAST:event_intersectionActionPerformed

    private void savefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savefileActionPerformed
            SaveFrame saveframe = new SaveFrame();
            saveframe.setVisible(true);
            saveframe.container9.addAll(shapes);          
            this.dispose();
    }//GEN-LAST:event_savefileActionPerformed

    private void lengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthActionPerformed
        DefaultComboBoxModel<String> cbmodel = new DefaultComboBoxModel<String>();
        for(int i = 0;i< shapes.size();i++){
        cbmodel.addElement(shapes.get(i).toString());
        }
        LengthFrame lengthframe = new LengthFrame();
        lengthframe.jComboBox1.setModel(cbmodel);
        lengthframe.setVisible(true);
        lengthframe.container6.addAll(shapes);
        this.dispose();;        // TODO add your handling code here:
    }//GEN-LAST:event_lengthActionPerformed

    private void loadfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadfileActionPerformed
        LoadFrame loadframe = new LoadFrame();
            loadframe.setVisible(true);
            loadframe.container10.addAll(shapes);
            this.dispose();
    }//GEN-LAST:event_loadfileActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            jFileChooser1.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        File file;
            file = jFileChooser1.getSelectedFile();
            String path = file.getPath();
            this.remove(jFileChooser1);
            this.repaint();
             BufferedImage bi = new BufferedImage(this.getWidth(),this.getHeight(),BufferedImage.TYPE_INT_RGB);
             Graphics g = bi.createGraphics();
             this.printAll(g);
             
try {
            ImageIO.write(bi, "png", file);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
    }//GEN-LAST:event_jFileChooser1ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FlowLayout experimentLayout = new FlowLayout();

                new MainFrame().setLayout(experimentLayout);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addfigure;
    private javax.swing.JButton clear;
    private javax.swing.JButton deletefigure;
    private javax.swing.JButton intersection;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JButton length;
    private javax.swing.JButton loadfile;
    private javax.swing.JButton movefigure;
    private javax.swing.JButton savefile;
    private javax.swing.JButton saveimage;
    private javax.swing.JButton square;
    // End of variables declaration//GEN-END:variables


    List<IShape> shapes = new ArrayList<>();
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        g.drawLine(500,100,500,1000);
        g.drawLine(100, 400, 1000, 400);
        for(int i = 0;i < shapes.size();i++){
            IShape t = shapes.get(i);
            if(t.getClass() == Segment.class){
                Segment ts = new Segment();
                ts = (Segment) t;
                g.drawLine((int)ts.start.x[0], (int)ts.start.x[1], (int)ts.finish.x[0], (int)ts.finish.x[1]);
            }else{
            if(t.getClass() == Circle.class){
                Circle tc = new Circle();
                tc = (Circle) t;
                g.drawOval((int)(tc.p.x[0]-(tc.r/2)) , (int)(tc.p.x[1]-(tc.r/2)) , (int)tc.r , (int)tc.r);
            }else{
            if(t.getClass() == Polyline.class){
                Polyline tp = new Polyline();
                tp = (Polyline) t;
                for(int b=0;b<tp.n-1; b++){
                g.drawLine((int)tp.p[b].x[0] , (int)tp.p[b].x[1] , (int)tp.p[b+1].x[0] , (int)tp.p[b+1].x[1]);
                }
                
            }else{
                NGon tn = new NGon();
                tn = (NGon) t;
                for(int j = 0; j< tn.n-1;j++ ){
                g.drawLine((int)tn.p[j].x[0] , (int)tn.p[j].x[1] , (int)tn.p[j+1].x[0] , (int)tn.p[j+1].x[1]);
                }
                g.drawLine((int)tn.p[tn.n-1].x[0] , (int)tn.p[tn.n-1].x[1] , (int)tn.p[0].x[0] , (int)tn.p[0].x[1]);
            }
            if(t.getClass() == Rectangle.class){
                Rectangle tr = new Rectangle();
                tr = (Rectangle) t;
                g.drawLine((int)tr.p[0].x[0], (int)tr.p[0].x[1], (int)tr.p[1].x[0], (int)tr.p[1].x[1]);
                g.drawLine((int)tr.p[1].x[0], (int)tr.p[1].x[1], (int)tr.p[2].x[0], (int)tr.p[2].x[1]);
                g.drawLine((int)tr.p[2].x[0], (int)tr.p[2].x[1], (int)tr.p[3].x[0], (int)tr.p[3].x[1]);
                g.drawLine((int)tr.p[3].x[0], (int)tr.p[3].x[1], (int)tr.p[0].x[0], (int)tr.p[0].x[1]);
            }
            if(t.getClass() == QGon.class){
                QGon tr = new QGon();
                tr = (QGon) t;
                g.drawLine((int)tr.p[0].x[0], (int)tr.p[0].x[1], (int)tr.p[1].x[0], (int)tr.p[1].x[1]);
                g.drawLine((int)tr.p[1].x[0], (int)tr.p[1].x[1], (int)tr.p[2].x[0], (int)tr.p[2].x[1]);
                g.drawLine((int)tr.p[2].x[0], (int)tr.p[2].x[1], (int)tr.p[3].x[0], (int)tr.p[3].x[1]);
                g.drawLine((int)tr.p[3].x[0], (int)tr.p[3].x[1], (int)tr.p[0].x[0], (int)tr.p[0].x[1]);
            }
            if(t.getClass() == TGon.class){
                TGon tr = new TGon();
                tr = (TGon) t;
                g.drawLine((int)tr.p[0].x[0], (int)tr.p[0].x[1], (int)tr.p[1].x[0], (int)tr.p[1].x[1]);
                g.drawLine((int)tr.p[1].x[0], (int)tr.p[1].x[1], (int)tr.p[2].x[0], (int)tr.p[2].x[1]);
                g.drawLine((int)tr.p[2].x[0], (int)tr.p[2].x[1], (int)tr.p[0].x[0], (int)tr.p[0].x[1]);
            }
            if(t.getClass() == NGon.class){
                NGon tn = new NGon();
                tn = (NGon) t;
                for(int j = 0; j< tn.n-1;j++ ){
                g.drawLine((int)tn.p[j].x[0] , (int)tn.p[j].x[1] , (int)tn.p[j+1].x[0] , (int)tn.p[j+1].x[1]);
                }
                g.drawLine((int)tn.p[tn.n-1].x[0] , (int)tn.p[tn.n-1].x[1] , (int)tn.p[0].x[0] , (int)tn.p[0].x[1]);
            }
            if(t.getClass() == Trapeze.class){
                QGon tr = new QGon();
                tr = (QGon) t;
                g.drawLine((int)tr.p[0].x[0], (int)tr.p[0].x[1], (int)tr.p[1].x[0], (int)tr.p[1].x[1]);
                g.drawLine((int)tr.p[1].x[0], (int)tr.p[1].x[1], (int)tr.p[2].x[0], (int)tr.p[2].x[1]);
                g.drawLine((int)tr.p[2].x[0], (int)tr.p[2].x[1], (int)tr.p[3].x[0], (int)tr.p[3].x[1]);
                g.drawLine((int)tr.p[3].x[0], (int)tr.p[3].x[1], (int)tr.p[0].x[0], (int)tr.p[0].x[1]);
            }
            
            }
            }
        }
    }
}
    
